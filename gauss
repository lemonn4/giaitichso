import numpy as np

def gaussian_elimination(A, b):
    n = len(A)
    augmented_matrix = np.concatenate((A, np.array([b]).T), axis=1)

    # Forward elimination
    for i in range(n):
        # Find the pivot row (maximum absolute value in the same column)
        pivot_row = i
        for j in range(i + 1, n):
            if abs(augmented_matrix[j, i]) > abs(augmented_matrix[pivot_row, i]):
                pivot_row = j

        # Swap rows to move the pivot row to the current row
        augmented_matrix[[i, pivot_row]] = augmented_matrix[[pivot_row, i]]

        # Eliminate variables below the pivot
        for j in range(i + 1, n):
            factor = augmented_matrix[j, i] / augmented_matrix[i, i]
            augmented_matrix[j, i:] -= factor * augmented_matrix[i, i:]

    print("Kết quả lần khử đầu tiên:")
    print(augmented_matrix)

    # Back substitution
    x = np.zeros(n)
    for i in range(n - 1, -1, -1):
        x[i] = (augmented_matrix[i, -1] - np.dot(augmented_matrix[i, i:n-1], x[i:n-1])) / augmented_matrix[i, i]

    print("Ma trận tam giác trên:")
    print(augmented_matrix)

    return x


A = np.array([[4, 0.24, -0.08],
              [0.09, 3, -0.15],
              [0.04, -0.08, 4]])
b = np.array([8, 9, 20])

solution = gaussian_elimination(A, b)
print("Nghiệm của hệ phương trình là:", solution)
